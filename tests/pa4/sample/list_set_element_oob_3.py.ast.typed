{
  "kind" : "Program",
  "location" : [ 1, 1, 4, 9 ],
  "declarations" : [ {
    "kind" : "VarDef",
    "location" : [ 1, 1, 1, 14 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 1, 1, 1, 7 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 1, 1, 1, 1 ],
        "name" : "x"
      },
      "type" : {
        "kind" : "ListType",
        "location" : [ 1, 3, 1, 7 ],
        "elementType" : {
          "kind" : "ClassType",
          "location" : [ 1, 4, 1, 6 ],
          "className" : "int"
        }
      }
    },
    "value" : {
      "kind" : "NoneLiteral",
      "location" : [ 1, 11, 1, 14 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<None>"
      }
    }
  } ],
  "statements" : [ {
    "kind" : "AssignStmt",
    "location" : [ 3, 1, 3, 6 ],
    "targets" : [ {
      "kind" : "Identifier",
      "location" : [ 3, 1, 3, 1 ],
      "inferredType" : {
        "kind" : "ListValueType",
        "elementType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        }
      },
      "name" : "x"
    } ],
    "value" : {
      "kind" : "ListExpr",
      "location" : [ 3, 5, 3, 6 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<Empty>"
      },
      "elements" : [ ]
    }
  }, {
    "kind" : "AssignStmt",
    "location" : [ 4, 1, 4, 8 ],
    "targets" : [ {
      "kind" : "IndexExpr",
      "location" : [ 4, 1, 4, 4 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "list" : {
        "kind" : "Identifier",
        "location" : [ 4, 1, 4, 1 ],
        "inferredType" : {
          "kind" : "ListValueType",
          "elementType" : {
            "kind" : "ClassValueType",
            "className" : "int"
          }
        },
        "name" : "x"
      },
      "index" : {
        "kind" : "IntegerLiteral",
        "location" : [ 4, 3, 4, 3 ],
        "inferredType" : {
          "kind" : "ClassValueType",
          "className" : "int"
        },
        "value" : 0
      }
    } ],
    "value" : {
      "kind" : "IntegerLiteral",
      "location" : [ 4, 8, 4, 8 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 4
    }
  } ],
  "errors" : {
    "errors" : [ ],
    "kind" : "Errors",
    "location" : [ 0, 0, 0, 0 ]
  }
}